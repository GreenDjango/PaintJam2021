[gd_scene load_steps=22 format=2]

[ext_resource path="res://src/scenes/level.tscn" type="PackedScene" id=1]
[ext_resource path="res://assets/sprites/note.png" type="Texture" id=2]
[ext_resource path="res://src/shaders/wobbly_effect.shader" type="Shader" id=3]
[ext_resource path="res://assets/textures/normals/organic-normal.jpg" type="Texture" id=4]
[ext_resource path="res://assets/sprites/boutton.png" type="Texture" id=5]
[ext_resource path="res://assets/font/Louisfont-Regular.otf" type="DynamicFontData" id=6]
[ext_resource path="res://src/scripts/CanvasLayer.gd" type="Script" id=7]

[sub_resource type="Shader" id=1]
code = "shader_type canvas_item;

// https://godotshaders.com/shader/wobbly-effect-hand-painted-animation
// The shader code and all code snippets in this post are under CC0 license

uniform sampler2D flowMap; //Displacement map
uniform float strength;    //Force of the effect
uniform float speed;       //Speed of the effect
uniform int frames : hint_range(1, 10); //Frames of the effect

//Returns a value between 0 and 1 depending of the frames -> exemple: frames = 4, frame 1 = 0.25
float clock(float time){
	float fframes = float(frames);
	return floor(mod(time * speed, fframes)) / fframes;
}

void fragment(){
	float c = clock(TIME); //Get clock frame
	vec4 offset = texture(flowMap, vec2(UV.x + c, UV.y + c)) * strength; //Get offset 
	//COLOR = texture(TEXTURE, vec2(UV.x,UV.y) + normal.xy); //Apply offset
	COLOR = texture(TEXTURE, vec2(UV.x,UV.y) + offset.xy - vec2(0.5,0.5)*strength); //We need to remove the displacement 
}


// TEST CLOCK
/*
void fragment(){
	float c = clock(TIME);
	COLOR = vec4( c, c, c, 1);
}
*/"

[sub_resource type="ShaderMaterial" id=2]
shader = SubResource( 1 )
shader_param/strength = 0.01
shader_param/speed = 3.0
shader_param/frames = 2
shader_param/flowMap = ExtResource( 4 )

[sub_resource type="Shader" id=3]
code = "shader_type canvas_item;

// https://godotshaders.com/shader/wobbly-effect-hand-painted-animation
// The shader code and all code snippets in this post are under CC0 license

uniform sampler2D flowMap; //Displacement map
uniform float strength;    //Force of the effect
uniform float speed;       //Speed of the effect
uniform int frames : hint_range(1, 10); //Frames of the effect

//Returns a value between 0 and 1 depending of the frames -> exemple: frames = 4, frame 1 = 0.25
float clock(float time){
	float fframes = float(frames);
	return floor(mod(time * speed, fframes)) / fframes;
}

void fragment(){
	float c = clock(TIME); //Get clock frame
	vec4 offset = texture(flowMap, vec2(UV.x + c, UV.y + c)) * strength; //Get offset 
	//COLOR = texture(TEXTURE, vec2(UV.x,UV.y) + normal.xy); //Apply offset
	COLOR = texture(TEXTURE, vec2(UV.x,UV.y) + offset.xy - vec2(0.5,0.5)*strength); //We need to remove the displacement 
}


// TEST CLOCK
/*
void fragment(){
	float c = clock(TIME);
	COLOR = vec4( c, c, c, 1);
}
*/"

[sub_resource type="ShaderMaterial" id=4]
shader = SubResource( 3 )
shader_param/strength = 0.003
shader_param/speed = 3.0
shader_param/frames = 2
shader_param/flowMap = ExtResource( 4 )

[sub_resource type="DynamicFont" id=5]
size = 80
outline_color = Color( 0, 0, 0, 1 )
font_data = ExtResource( 6 )

[sub_resource type="ShaderMaterial" id=6]
shader = SubResource( 1 )
shader_param/strength = 0.003
shader_param/speed = 3.0
shader_param/frames = 2
shader_param/flowMap = ExtResource( 4 )

[sub_resource type="DynamicFont" id=7]
size = 150
outline_color = Color( 0, 0, 0, 1 )
font_data = ExtResource( 6 )

[sub_resource type="ShaderMaterial" id=8]
shader = ExtResource( 3 )
shader_param/strength = 0.005
shader_param/speed = 3.0
shader_param/frames = 2
shader_param/flowMap = ExtResource( 4 )

[sub_resource type="DynamicFont" id=9]
size = 200
outline_size = 1
font_data = ExtResource( 6 )

[sub_resource type="ShaderMaterial" id=10]
shader = ExtResource( 3 )
shader_param/strength = 0.04
shader_param/speed = 3.0
shader_param/frames = 2
shader_param/flowMap = ExtResource( 4 )

[sub_resource type="ShaderMaterial" id=11]
shader = ExtResource( 3 )
shader_param/strength = 0.005
shader_param/speed = 3.0
shader_param/frames = 2
shader_param/flowMap = ExtResource( 4 )

[sub_resource type="DynamicFont" id=12]
size = 150
outline_size = 1
font_data = ExtResource( 6 )

[sub_resource type="ShaderMaterial" id=13]
shader = ExtResource( 3 )
shader_param/strength = 0.01
shader_param/speed = 2.0
shader_param/frames = 2
shader_param/flowMap = ExtResource( 4 )

[sub_resource type="DynamicFont" id=14]
size = 61
outline_size = 3
outline_color = Color( 0.286275, 0.556863, 0.309804, 1 )
font_data = ExtResource( 6 )

[node name="Game" type="Node2D"]

[node name="Level" parent="." instance=ExtResource( 1 )]
position = Vector2( -3.03711, 0.887632 )

[node name="CanvasLayer" type="CanvasLayer" parent="." groups=[
"UI",
]]
script = ExtResource( 7 )

[node name="NoteSprite" type="Sprite" parent="CanvasLayer"]
material = SubResource( 2 )
position = Vector2( 133.384, 547.487 )
scale = Vector2( 0.905118, 0.865265 )
texture = ExtResource( 2 )

[node name="DebugLabel" type="Label" parent="CanvasLayer"]
modulate = Color( 0, 0, 0, 1 )
material = SubResource( 4 )
anchor_left = -4.52995e-07
anchor_top = 0.999395
anchor_right = -4.52995e-07
anchor_bottom = 0.999395
margin_left = 54.7937
margin_top = -265.944
margin_right = 218.794
margin_bottom = -192.944
grow_horizontal = 0
custom_fonts/font = SubResource( 5 )
custom_colors/font_color = Color( 0, 0, 0, 1 )
custom_colors/font_color_shadow = Color( 0, 0, 0, 1 )
text = "Recipe"
align = 2
__meta__ = {
"_edit_use_anchors_": false
}

[node name="IngredientIndicators" type="HBoxContainer" parent="CanvasLayer"]
anchor_top = 0.999521
anchor_bottom = 0.999521
margin_left = 42.9048
margin_top = -192.483
margin_right = 242.905
margin_bottom = -142.483
grow_horizontal = 2
alignment = 1
__meta__ = {
"_edit_use_anchors_": false
}

[node name="Lives" type="HBoxContainer" parent="CanvasLayer"]
anchor_left = 0.998874
anchor_top = 1.0
anchor_right = 0.998874
anchor_bottom = 1.0
margin_left = -241.896
margin_top = -94.2709
margin_right = -93.896
margin_bottom = -44.2709
alignment = 1
__meta__ = {
"_edit_use_anchors_": false
}

[node name="Timer" type="Label" parent="CanvasLayer"]
modulate = Color( 0, 0, 0, 1 )
material = SubResource( 6 )
anchor_left = -0.00213807
anchor_top = 1.00189
anchor_right = -0.00213807
anchor_bottom = 1.00189
margin_left = 80.3872
margin_top = -142.775
margin_right = 191.387
margin_bottom = -6.7749
custom_fonts/font = SubResource( 7 )
custom_colors/font_color = Color( 0, 0, 0, 1 )
custom_colors/font_color_shadow = Color( 0, 0, 0, 1 )
text = "10"
align = 1
__meta__ = {
"_edit_use_anchors_": false
}

[node name="Timer" type="Timer" parent="CanvasLayer/Timer"]

[node name="SpeedDown" type="TextureButton" parent="CanvasLayer"]
material = SubResource( 4 )
anchor_left = 1.0
anchor_top = 1.0
anchor_right = 1.0
anchor_bottom = 1.0
margin_left = -295.274
margin_top = -221.214
margin_right = -55.2742
margin_bottom = -136.214
texture_normal = ExtResource( 5 )
__meta__ = {
"_edit_use_anchors_": false
}

[node name="Label" type="Label" parent="CanvasLayer/SpeedDown"]
material = SubResource( 8 )
anchor_left = 0.5
anchor_top = 0.511913
anchor_right = 0.5
anchor_bottom = 0.511913
margin_left = -56.5
margin_top = -90.0
margin_right = 56.5
margin_bottom = 90.0
custom_fonts/font = SubResource( 9 )
text = "-"
align = 1
__meta__ = {
"_edit_use_anchors_": false
}

[node name="SpeedUp" type="TextureButton" parent="CanvasLayer"]
material = SubResource( 10 )
anchor_left = 0.999394
anchor_top = 1.0
anchor_right = 0.999394
anchor_bottom = 1.0
margin_left = -293.837
margin_top = -319.687
margin_right = -53.8367
margin_bottom = -234.687
texture_normal = ExtResource( 5 )
__meta__ = {
"_edit_use_anchors_": false
}

[node name="Label" type="Label" parent="CanvasLayer/SpeedUp"]
material = SubResource( 11 )
anchor_left = 0.5
anchor_top = 0.5
anchor_right = 0.5
anchor_bottom = 0.5
margin_left = -62.5251
margin_top = -60.2988
margin_right = 58.4749
margin_bottom = 92.7012
custom_fonts/font = SubResource( 12 )
text = "+"
align = 1
__meta__ = {
"_edit_use_anchors_": false
}

[node name="addScoreLabel" type="Label" parent="CanvasLayer"]
visible = false
modulate = Color( 0.6, 0, 0, 1 )
material = SubResource( 13 )
anchor_left = 0.500953
anchor_top = 0.499787
anchor_right = 0.532203
anchor_bottom = 0.55812
margin_left = -207.74
margin_top = 97.2999
margin_right = -167.74
margin_bottom = 111.3
rect_rotation = -30.7984
custom_fonts/font = SubResource( 14 )
custom_colors/font_color = Color( 0, 0, 0, 1 )
text = "+30"
__meta__ = {
"_edit_use_anchors_": false
}

[node name="Timer" type="Timer" parent="CanvasLayer/addScoreLabel"]

[connection signal="pressed" from="CanvasLayer/SpeedDown" to="Level" method="_on_SpeedDown_pressed"]
[connection signal="pressed" from="CanvasLayer/SpeedUp" to="Level" method="_on_SpeedUp_pressed"]
